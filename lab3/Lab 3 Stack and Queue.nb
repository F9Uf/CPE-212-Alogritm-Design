(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     13308,        449]
NotebookOptionsPosition[     10289,        346]
NotebookOutlinePosition[     10713,        362]
CellTagsIndexPosition[     10670,        359]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["CPE 212 Algorithm Design (1/61)",
 FontWeight->"Bold"]], "Title",
 CellChangeTimes->{3.7450558691690273`*^9}],

Cell["Lab III: Stack and Queue", "Subtitle",
 CellChangeTimes->{{3.7450558844939737`*^9, 3.7450558922398005`*^9}}],

Cell[CellGroupData[{

Cell["Part I: Stack", "Section",
 CellChangeTimes->{{3.7450568344229364`*^9, 3.7450568387385626`*^9}}],

Cell["\<\
This source file provides a template for working with a array-based stack. \
Complete the following functions as discussed in the class:\
\>", "Text",
 CellChangeTimes->{{3.7450568560324097`*^9, 3.7450569232860637`*^9}, {
  3.7450570123329844`*^9, 3.745057014146036*^9}}],

Cell[CellGroupData[{

Cell["\<\
isEmpty[ ] returns True if the stack is empty and False otherwise.\
\>", "Item",
 CellChangeTimes->{{3.7450570321915064`*^9, 3.745057051591648*^9}, {
  3.745060095714052*^9, 3.74506014262016*^9}}],

Cell["top[ ] returns a key from the top of the stack.", "Item",
 CellChangeTimes->{{3.7450570321915064`*^9, 3.7450570691905107`*^9}, {
  3.7450601146579943`*^9, 3.7450601971152906`*^9}}],

Cell["push[ ] adds a given key to the top of the stack.", "Item",
 CellChangeTimes->{{3.7450570321915064`*^9, 3.745057101189823*^9}, {
   3.745060079292519*^9, 3.745060080104745*^9}, 3.7450601478229284`*^9}],

Cell["\<\
pop[ ] removes a key from the top of the stack. You should check if the stack \
is empty before popping.\
\>", "Item",
 CellChangeTimes->{{3.7450570321915064`*^9, 3.7450571236799035`*^9}, 
   3.7450601493079305`*^9, {3.7450601802382126`*^9, 3.7450601807382317`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stackNew", "[", "]"}], ":=", 
    RowBox[{
     RowBox[{"Unique", "[", "]"}], "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stackContents", "[", "s_", "]"}], ":=", 
   RowBox[{"List", "@@", 
    RowBox[{"Flatten", "[", "s", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7450586325587234`*^9, 3.7450586394577503`*^9}, {
   3.745058720659932*^9, 3.745058737190547*^9}, 3.745061464757673*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isEmpty", "[", "s_", "]"}], ":="}]], "Input",
 CellChangeTimes->{{3.7450598898617268`*^9, 3.7450599032844286`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"top", "[", "s_", "]"}], ":="}]], "Input",
 CellChangeTimes->{{3.74506001180902*^9, 3.7450600161828065`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"push", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"push", "[", 
   RowBox[{"s_", ",", "i_"}], "]"}], ":="}]}], "Input",
 CellChangeTimes->{{3.7450600245125933`*^9, 3.745060032353523*^9}, {
  3.745061154492565*^9, 3.7450611596725473`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"pop", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pop", "[", "s_", "]"}], ":="}]}], "Input",
 CellChangeTimes->{{3.745060039005014*^9, 3.745060044931058*^9}, {
  3.7450611670863237`*^9, 3.7450611704140673`*^9}}],

Cell["\<\
Then, test your code by performing the following sequence of operations:\
\>", "Text",
 CellChangeTimes->{{3.745057143719261*^9, 3.745057159357386*^9}}],

Cell["Push the following numbers 50, 45, 32, 28, 10 to the stack", \
"ItemNumbered",
 CellChangeTimes->{{3.74505720956343*^9, 3.745057227400134*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Output"]
}, Open  ]],

Cell["Pop the stack 3 times in a row", "ItemNumbered",
 CellChangeTimes->{{3.74505720956343*^9, 3.7450572395283966`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Output"]
}, Open  ]],

Cell["Push the following numbers 41, 3", "ItemNumbered",
 CellChangeTimes->{{3.74505720956343*^9, 3.745057248492017*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Output"]
}, Open  ]],

Cell["Pop the stack 6 times in a row", "ItemNumbered",
 CellChangeTimes->{{3.74505720956343*^9, 3.7450572562792325`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Explaination", "Subsection",
 CellChangeTimes->{{3.745061675672035*^9, 3.7450616884680214`*^9}}],

Cell["Explain here.", "Text",
 CellChangeTimes->{{3.745061734263156*^9, 3.7450617381220756`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluation", "Subsection",
 CellChangeTimes->{{3.745061721730895*^9, 3.7450617238405895`*^9}}],

Cell["Explain here.", "Text",
 CellChangeTimes->{{3.745061740137463*^9, 3.745061742152867*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part II: Queue", "Section",
 CellChangeTimes->{{3.7450568344229364`*^9, 3.7450568387385626`*^9}, {
  3.7450573034497004`*^9, 3.7450573070126514`*^9}}],

Cell["\<\
This source file provides a template for working with a link-listed based \
queue. Complete the following functions as discussed in the class:\
\>", "Text",
 CellChangeTimes->{{3.7450568560324097`*^9, 3.7450569232860637`*^9}, {
  3.7450570123329844`*^9, 3.745057014146036*^9}, {3.7450573229971952`*^9, 
  3.7450573354870243`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "isEmpty[ ] returns ",
 StyleBox["True",
  FontSlant->"Italic"],
 " if the queue is empty and ",
 StyleBox["False",
  FontSlant->"Italic"],
 " otherwise."
}], "Item",
 CellChangeTimes->{{3.7450570321915064`*^9, 3.745057051591648*^9}, {
  3.7450573532967196`*^9, 3.745057354983882*^9}, {3.7450615027776575`*^9, 
  3.74506153250136*^9}}],

Cell["enqueue[ ] adds a given key to the rear of the queue.", "Item",
 CellChangeTimes->{{3.7450570321915064`*^9, 3.745057101189823*^9}, {
  3.7450573865734463`*^9, 3.7450573870891438`*^9}, {3.745061535157571*^9, 
  3.7450615364858456`*^9}}],

Cell["\<\
dequeue[ ] removes a key from the front of the queue. You should check if the \
queue is empty before dequeuing.\
\>", "Item",
 CellChangeTimes->{{3.7450570321915064`*^9, 3.7450571236799035`*^9}, {
   3.745057389682858*^9, 3.745057421739578*^9}, 3.745061538948246*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"qNew", "[", "]"}], ":=", 
   RowBox[{"qNew", "[", 
    RowBox[{"{", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"qNew", "[", 
     RowBox[{"{", "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Unique", "[", "q", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qContents", "=", "\n", "    ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
      ",", "\n", "        ", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{"#", "\\\n"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}], "]"}]}], "]"}], "&"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.74506028351777*^9, {3.7450611885973687`*^9, 3.7450612137028275`*^9}, {
   3.745061459561526*^9, 3.7450614890963187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isEmpty", "[", "q_", "]"}], ":="}]], "Input",
 CellChangeTimes->{{3.7450615410466456`*^9, 3.7450615459312305`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"enqueue", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enqueue", "[", 
   RowBox[{"q_", ",", "k_"}], "]"}], ":="}]}], "Input",
 CellChangeTimes->{{3.7450615482121973`*^9, 3.74506156439855*^9}, {
  3.7450615996695642`*^9, 3.7450616049690456`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"dequeue", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dequeue", "[", "q_", "]"}], ":="}]}], "Input",
 CellChangeTimes->{{3.7450615698705325`*^9, 3.745061595666258*^9}}],

Cell["\<\
Then, test your code by performing the following sequence of operations:\
\>", "Text",
 CellChangeTimes->{{3.745057143719261*^9, 3.745057159357386*^9}}],

Cell["\<\
Enqueue the following numbers 50, 45, 32, 28, 10 to the queue\
\>", "ItemNumbered",
 CellChangeTimes->{{3.74505720956343*^9, 3.745057227400134*^9}, {
  3.745057432536682*^9, 3.745057441725597*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Output"]
}, Open  ]],

Cell["Dequeue 3 times in a row", "ItemNumbered",
 CellChangeTimes->{{3.74505720956343*^9, 3.7450572395283966`*^9}, {
  3.7450574448360124`*^9, 3.7450574509068117`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Output"]
}, Open  ]],

Cell["Enqueue the following numbers 41, 3", "ItemNumbered",
 CellChangeTimes->{{3.74505720956343*^9, 3.745057248492017*^9}, {
  3.745057456720143*^9, 3.745057457610346*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Output"]
}, Open  ]],

Cell["Dequeue 6 times in a row", "ItemNumbered",
 CellChangeTimes->{{3.74505720956343*^9, 3.7450572562792325`*^9}, {
  3.7450574676435266`*^9, 3.745057468848166*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Explaination", "Subsection",
 CellChangeTimes->{{3.745061675672035*^9, 3.7450616884680214`*^9}}],

Cell["Explain here.", "Text",
 CellChangeTimes->{{3.745061734263156*^9, 3.7450617381220756`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluation", "Subsection",
 CellChangeTimes->{{3.745061721730895*^9, 3.7450617238405895`*^9}}],

Cell["Explain here.", "Text",
 CellChangeTimes->{{3.745061740137463*^9, 3.745061742152867*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (September 9, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 133, 2, 99, "Title"],
Cell[716, 26, 114, 1, 36, "Subtitle"],
Cell[CellGroupData[{
Cell[855, 31, 102, 1, 72, "Section"],
Cell[960, 34, 281, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[1266, 43, 206, 4, 25, "Item"],
Cell[1475, 49, 186, 2, 25, "Item"],
Cell[1664, 53, 207, 2, 25, "Item"],
Cell[1874, 57, 276, 5, 25, "Item"]
}, Open  ]],
Cell[2165, 65, 515, 14, 81, "Input"],
Cell[2683, 81, 150, 3, 40, "Input"],
Cell[2836, 86, 143, 3, 40, "Input"],
Cell[2982, 91, 343, 8, 61, "Input"],
Cell[3328, 101, 316, 7, 61, "Input"],
Cell[3647, 110, 162, 3, 30, "Text"],
Cell[3812, 115, 149, 2, 26, "ItemNumbered"],
Cell[CellGroupData[{
Cell[3986, 121, 26, 0, 40, "Input"],
Cell[4015, 123, 27, 0, 40, "Output"]
}, Open  ]],
Cell[4057, 126, 121, 1, 26, "ItemNumbered"],
Cell[CellGroupData[{
Cell[4203, 131, 26, 0, 40, "Input"],
Cell[4232, 133, 27, 0, 40, "Output"]
}, Open  ]],
Cell[4274, 136, 121, 1, 26, "ItemNumbered"],
Cell[CellGroupData[{
Cell[4420, 141, 26, 0, 40, "Input"],
Cell[4449, 143, 27, 0, 40, "Output"]
}, Open  ]],
Cell[4491, 146, 121, 1, 26, "ItemNumbered"],
Cell[CellGroupData[{
Cell[4637, 151, 26, 0, 40, "Input"],
Cell[4666, 153, 27, 0, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4730, 158, 102, 1, 37, "Subsection"],
Cell[4835, 161, 97, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4969, 167, 100, 1, 37, "Subsection"],
Cell[5072, 170, 95, 1, 30, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5216, 177, 156, 2, 72, "Section"],
Cell[5375, 181, 340, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[5740, 191, 352, 11, 25, "Item"],
Cell[6095, 204, 241, 3, 25, "Item"],
Cell[6339, 209, 278, 5, 25, "Item"]
}, Open  ]],
Cell[6632, 217, 1110, 33, 161, "Input"],
Cell[7745, 252, 150, 3, 40, "Input"],
Cell[7898, 257, 350, 8, 61, "Input"],
Cell[8251, 267, 273, 6, 61, "Input"],
Cell[8527, 275, 162, 3, 30, "Text"],
Cell[8692, 280, 207, 4, 26, "ItemNumbered"],
Cell[CellGroupData[{
Cell[8924, 288, 26, 0, 40, "Input"],
Cell[8953, 290, 27, 0, 40, "Output"]
}, Open  ]],
Cell[8995, 293, 168, 2, 26, "ItemNumbered"],
Cell[CellGroupData[{
Cell[9188, 299, 26, 0, 40, "Input"],
Cell[9217, 301, 27, 0, 40, "Output"]
}, Open  ]],
Cell[9259, 304, 173, 2, 26, "ItemNumbered"],
Cell[CellGroupData[{
Cell[9457, 310, 26, 0, 40, "Input"],
Cell[9486, 312, 27, 0, 40, "Output"]
}, Open  ]],
Cell[9528, 315, 166, 2, 26, "ItemNumbered"],
Cell[CellGroupData[{
Cell[9719, 321, 26, 0, 40, "Input"],
Cell[9748, 323, 27, 0, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9812, 328, 102, 1, 37, "Subsection"],
Cell[9917, 331, 97, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10051, 337, 100, 1, 37, "Subsection"],
Cell[10154, 340, 95, 1, 30, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
